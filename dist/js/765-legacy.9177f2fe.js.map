{"version":3,"file":"js/765-legacy.9177f2fe.js","mappings":"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","sources":["webpack://msh22/./src/api/RegionsApi.js","webpack://msh22/./src/store/modules/Regions.js","webpack://msh22/./src/components/SelectRegion.vue?9c52","webpack://msh22/src/components/SelectRegion.vue","webpack://msh22/./src/components/SelectRegion.vue?0e7c","webpack://msh22/../../../src/components/VAutocomplete/VAutocomplete.ts","webpack://msh22/./src/components/SelectRegion.vue"],"sourcesContent":["import API from './Api';\n\nclass RegionsApi {\n  static getColumns() {\n    return API.request({\n      method: 'GET',\n      url: 'api/v1/regions/getList',\n    });\n  }\n}\n\nexport default RegionsApi;\n","import RegionsApi from '@/api/RegionsApi';\n\nexport default {\n  namespaced: true,\n\n  state: {\n    list: [],\n  },\n\n  mutations: {\n    setList(state, data) {\n      state.list = data;\n    },\n  },\n\n  actions: {\n    async fetchList({ commit }) {\n      try {\n        const { data } = await RegionsApi.getColumns();\n        commit('setList', data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n\n  getters: {\n    getList(state) {\n      return state.list;\n    },\n  },\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-autocomplete',{attrs:{\"items\":_vm.items,\"item-text\":\"region\",\"item-value\":\"id_region\",\"label\":\"Регион\",\"placeholder\":\"Начните печатать\",\"outlined\":\"\",\"rounded\":\"\",\"dense\":\"\",\"clearable\":\"\"},model:{value:(_vm.region),callback:function ($$v) {_vm.region=$$v},expression:\"region\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-autocomplete\n    v-model=\"region\"\n    :items=\"items\"\n    item-text=\"region\"\n    item-value=\"id_region\"\n    label=\"Регион\"\n    placeholder=\"Начните печатать\"\n    outlined\n    rounded\n    dense\n    clearable\n  ></v-autocomplete>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport RegionsModule from '@/store/modules/Regions';\n\nexport default {\n  name: 'SelectRegion',\n  props: {\n    value: [String, Number],\n  },\n  data() {\n    return {\n      region: null,\n    };\n  },\n  computed: {\n    ...mapGetters('Regions', ['getList']),\n    items() {\n      return this.getList;\n    },\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler(val) {\n        this.region = val;\n      },\n    },\n    region: {\n      handler(region) {\n        this.$emit('input', region);\n      },\n    },\n  },\n  methods: {\n    ...mapActions('Regions', ['fetchList']),\n  },\n  created() {\n    this.fetchList();\n  },\n  beforeCreate() {\n    if (!this.$store.hasModule('Regions')) this.$store.registerModule('Regions', RegionsModule);\n  },\n  destroyed() {\n    if (this.$store.hasModule('Regions')) this.$store.unregisterModule('Regions');\n  },\n};\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectRegion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectRegion.vue?vue&type=script&lang=js&\"","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./SelectRegion.vue?vue&type=template&id=497f2545&\"\nimport script from \"./SelectRegion.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectRegion.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\ninstallComponents(component, {VAutocomplete})\n"],"names":["RegionsApi","API","method","url","namespaced","state","list","mutations","setList","data","actions","fetchList","commit","console","log","getters","getList","render","_vm","this","_h","$createElement","_c","_self","attrs","items","model","value","callback","$$v","region","expression","staticRenderFns","name","props","computed","mapGetters","watch","immediate","handler","val","methods","mapActions","created","beforeCreate","destroyed","defaultMenuProps","VSelectMenuProps","offsetY","offsetOverflow","transition","VSelect","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","classes","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","getValue","hasDisplayedItems","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","getPropertyFromItem","text","get","set","$emit","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","virtualizedItems","document","addEventListener","onCopy","$refs","input","select","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","setSearch","onFilteredItemsChanged","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","keyCodes","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","genInput","VTextField","mergeData","getObjectValueByPath","autocomplete","domProps","genInputSlot","slot","role","genSelections","onClick","e","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","event","currentItem","currentItemText","clipboardData","setData","component","VAutocomplete"],"sourceRoot":""}